using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// ДВОИЧНОЕ ДЕРЕВО ПОИСКА
// у каждого узла не более двух дентей
// узел со значением меньшим становится левым ребенком или ребенком левого ребенка
// узел с большим или равным значением - правым ребенком или ребенком правого ребенка
//
// нет реализации в System
//
// МЕТОДЫ ОБХОДА ДЕРЕВЬЕВ
// 1. префиксный обход О(n)
//    получаем значение текущего узла 
//    посещаем левое поддерево
//    посещаем правое поддерево
//    применяется для копирования дерева с сохранением его структуры
//
// 2. постфиксный обход О(n)
//    посещаем левое поддерево
//    посещаем правое поддерево
//    переходим к узлу
//    применяется для удаления дерева или поддеревьев
//
// 3. инфиксный обход O(n)
//    обходит дерево в порядке значения узлов
//


namespace BinarySearchTree
{
    class Program
    {
        static void Main(string[] args)
        {
        }
    }
}
